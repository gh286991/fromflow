{"version":3,"sources":["utils/createAsyncActionTypes.js","modules/Flow/ActionCreator.js","constants/FlowStatus.js","modules/Flow/component/flowPage/FlowPage.js","lib/rootSelector.js","modules/Flow/selector.js","modules/Flow/component/flowPage/index.js","App.tsx","lib/configAxios.js","reportWebVitals.ts","constants/ReduxStatus.js","modules/Flow/reducer.js","lib/rootReducer.js","modules/Flow/API.js","modules/Flow/saga.js","lib/rootSaga.js","lib/configStore.js","index.tsx"],"names":["createAsyncActionTypes","actionTypeName","RESET","REQUEST","SUCCESS","FAILURE","createAsyncActionTypesArray","Object","values","createActions","prefix","FlowStatus","styles","mainContainer","padding","newFlowButton","width","display","flexDirection","justifyContent","alignItems","margin","formContainer","dateContainer","blank","searchContainer","inputSelect","operationButton","tdStyle","height","verticalAlign","FlowPage","data","useState","selectTag","setSelectTag","Date","startDate","setStartDate","endDate","setEndDate","flowColumns","dataField","text","sort","headerStyle","column","colIndex","formatter","cell","moment","format","isDummyField","cellContent","row","color","style","waitAcceptColumns","tabs","className","onClick","id","name","type","selected","onChange","date","bootstrap4","keyField","columns","defaultSorted","order","pagination","paginationFactory","defaultProps","tagStateSelector","state","flow","reduxStatusSelector","createSelector","result","R","reduxErrorSelector","tagListSelector","FlowPageContainer","reduxStatus","reduxError","actions","getTagFlowRequest","flowData","useEffect","connect","dispatch","bindActionCreators","ActionCreators","App","authenticationErrorHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","STATUS_INITIAL","STATUS_LOADING","STATUS_NORMAL","STATUS_ERROR","ActionCreator","getTagFlowSuccess","getTagFlowFailure","initialState","ReduxStatus","error","handleActions","combineActions","update","$set","payload","appReducer","combineReducers","rootReducer","action","privateToken","instance","axios","create","baseURL","timeout","setToken","newToken","interceptors","request","use","config","headers","Authorization","setAuthenticationErrorHandler","handler","response","status","Promise","reject","apiList","getFlowList","a","api","get","getTag","getTagFlow","getTagRequest","getTagSuccess","getTagFailure","put","call","API","console","log","tags","tagsSaga","takeLatest","rootSaga","all","tagSaga","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","serialize","compose","middlewares","enhancer","applyMiddleware","store","preloadedState","createStore","rootReducers","run","configStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9ae5c53.chunk.js","sourcesContent":["const createAsyncActionTypes = (actionTypeName) => ({\n  RESET: `${actionTypeName}_RESET`,\n  REQUEST: `${actionTypeName}_REQUEST`,\n  SUCCESS: `${actionTypeName}_SUCCESS`,\n  FAILURE: `${actionTypeName}_FAILURE`,\n});\n\nexport const createAsyncActionTypesArray = (actionTypeName) => Object.values(createAsyncActionTypes(actionTypeName));\n\nexport default createAsyncActionTypes;\n","import { createActions } from 'redux-actions';\nimport { createAsyncActionTypesArray } from '../../utils/createAsyncActionTypes';\n\nexport default createActions(\n  // ----- TASKS -----\n  ...createAsyncActionTypesArray('GET_TAG'),\n\n  // ----- FLOWS -----\n  ...createAsyncActionTypesArray('GET_TAG_FLOW'),\n\n  // ----- STATUS -----\n  'RESET_STATUS',\n\n  { prefix: 'TAG' },\n);\n","const STATUS_OBJFLOW_ONGOING = 'STATUS_OBJFLOW_ONGOING';\nconst FlowStatus = {\n  [STATUS_OBJFLOW_ONGOING]: \"進行中\",\n};\n\nexport default FlowStatus;\n","import React, { useState } from \"react\";\nimport { Nav, NavItem, NavLink, FormGroup, Input, Button } from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport FlowStatus from \"../../../../constants/FlowStatus\";\n\nconst styles = {\n  mainContainer: {\n    padding: 30,\n  },\n  newFlowButton: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    margin: \"20px 0px\",\n  },\n  formContainer: {\n    width: \"50%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 0,\n  },\n  dateContainer: {\n    width: \"40%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n  },\n  blank: {\n    width: \"10%\",\n  },\n  searchContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: \"20px 0px\",\n  },\n  inputSelect: {\n    margin: \"0px 10px\",\n  },\n  operationButton: {\n    margin: \"0px 2px\",\n  },\n  tdStyle: {\n    height: \"100%\",\n    verticalAlign: \"middle\",\n  },\n};\n\nconst FlowPage = ({ data }) => {\n  const [selectTag, setSelectTag] = useState(\"flow\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n  const flowColumns = [\n    {\n      dataField: \"\",\n      text: \"到期日\",\n      sort: true,\n      headerStyle: (column, colIndex) => {\n        return { width: \"100px\" };\n      },\n    },\n    {\n      dataField: \"objectFormFlowCaseName\",\n      text: \"個案\",\n      sort: true,\n    },\n    {\n      dataField: \"objectFormFlowCase\",\n      text: \"名稱\",\n      sort: true,\n    },\n    {\n      dataField: \"\",\n      text: \"類別\",\n      sort: true,\n      headerStyle: (column, colIndex) => {\n        return { width: \"120px\" };\n      },\n    },\n    {\n      dataField: \"startDate\",\n      text: \"啟動時間\",\n      sort: true,\n      headerStyle: (column, colIndex) => {\n        return { width: \"160px\" };\n      },\n      formatter: (cell) => {\n        return moment(cell).format(\"YYYY-MM-DD HH:mm\");\n      },\n    },\n    {\n      dataField: \"statusProcessing\",\n      text: \"狀態\",\n      sort: true,\n      headerStyle: () => {\n        return { width: \"120px\" };\n      },\n      formatter: (cell) => {\n        return FlowStatus[cell];\n      },\n    },\n    {\n      isDummyField: true,\n      text: \"操作\",\n      formatter: (cellContent, row) => {\n        return (\n          <>\n            <Button color=\"primary\" style={styles.operationButton}>\n              撤回\n            </Button>\n            <Button color=\"primary\" style={styles.operationButton}>\n              停止\n            </Button>\n            <Button color=\"primary\" style={styles.operationButton}>\n              歷程\n            </Button>\n          </>\n        );\n      },\n    },\n  ];\n\n  const waitAcceptColumns = [\n    {\n      dataField: \"\",\n      text: \"到期日\",\n      sort: true,\n      headerStyle: (column, colIndex) => {\n        return { width: \"100px\" };\n      },\n      style: () => styles.tdStyle,\n    },\n    {\n      dataField: \"objectFormFlowCaseName\",\n      text: \"個案\",\n      sort: true,\n      style: () => styles.tdStyle,\n    },\n    {\n      dataField: \"objectFormFlowCase\",\n      text: \"名稱\",\n      sort: true,\n      style: () => styles.tdStyle,\n    },\n    {\n      dataField: \"type\",\n      text: \"類別\",\n      sort: true,\n      headerStyle: () => {\n        return { width: \"120px\" };\n      },\n      style: () => styles.tdStyle,\n    },\n    {\n      dataField: \"\",\n      text: \"負責人\",\n      sort: true,\n      headerStyle: () => {\n        return { width: \"120px\" };\n      },\n      style: () => styles.tdStyle,\n    },\n    {\n      dataField: \"startDate\",\n      text: \"送出時間\",\n      sort: true,\n      headerStyle: () => {\n        return { width: \"160px\" };\n      },\n      formatter: (cell) => {\n        return moment(cell).format(\"YYYY-MM-DD HH:mm\");\n      },\n      style: () => styles.tdStyle,\n    },\n    {\n      dataField: \"statusProcessing\",\n      text: \"狀態\",\n      sort: true,\n      headerStyle: () => {\n        return { width: \"120px\" };\n      },\n      formatter: (cell) => {\n        return FlowStatus[cell];\n      },\n      style: () => styles.tdStyle,\n    },\n    {\n      isDummyField: true,\n      text: \"操作\",\n      style: () => styles.tdStyle,\n      formatter: () => {\n        return (\n          <>\n            <div style={{ margin: \"2px 0px\" }}>\n              <Button color=\"primary\" style={styles.operationButton}>\n                修改\n              </Button>\n              <Button color=\"primary\" style={styles.operationButton}>\n                指派\n              </Button>\n            </div>\n            <div style={{ margin: \"2px 0px\" }}>\n              <Button color=\"primary\" style={styles.operationButton}>\n                核准\n              </Button>\n              <Button color=\"primary\" style={styles.operationButton}>\n                駁回\n              </Button>\n            </div>\n          </>\n        );\n      },\n    },\n  ];\n\n  const defaultSorted = [\n    {\n      dataField: \"name\",\n      order: \"desc\",\n    },\n  ];\n\n  const flowMangerContent = () => {\n    return (\n      <>\n        <div style={styles.newFlowButton}>\n          <Button color=\"primary\">啟動表單新流程</Button>\n        </div>\n        <div style={styles.searchContainer}>\n          <FormGroup style={styles.formContainer}>\n            <Input\n              id=\"exampleSelect\"\n              name=\"select\"\n              type=\"select\"\n              style={styles.inputSelect}\n            >\n              <option>個案名稱</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n            </Input>\n\n            <Input\n              id=\"exampleSelect\"\n              name=\"select\"\n              type=\"select\"\n              style={styles.inputSelect}\n            >\n              <option>流程名稱</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n            </Input>\n\n            <Input\n              id=\"exampleSelect\"\n              name=\"select\"\n              type=\"select\"\n              style={styles.inputSelect}\n            >\n              <option>流程類別</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n            </Input>\n\n            <Input\n              id=\"exampleSelect\"\n              name=\"select\"\n              type=\"select\"\n              style={styles.inputSelect}\n            >\n              <option>流程狀態</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n            </Input>\n          </FormGroup>\n          <div style={styles.blank}></div>\n          <div style={styles.dateContainer}>\n            <div style={{ width: \"200px\" }}>到期日:</div>\n            <DatePicker\n              selected={startDate}\n              onChange={(date) => setStartDate(date)}\n            />\n            ~\n            <DatePicker\n              selected={endDate}\n              onChange={(date) => setEndDate(date)}\n            />\n            <Button color=\"primary\" style={{ width: \"120px\" }}>\n              查詢\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div style={styles.mainContainer} key=\"baseContainer\">\n      <Nav tabs>\n        <NavItem>\n          <NavLink\n            className={selectTag === \"flow\" ? \"active\" : \"\"}\n            onClick={() => {\n              setSelectTag(\"flow\");\n            }}\n          >\n            表單流程管理\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink\n            className={selectTag === \"waitAccess\" ? \"active\" : \"\"}\n            onClick={() => {\n              setSelectTag(\"waitAccess\");\n            }}\n          >\n            待核准表單\n          </NavLink>\n        </NavItem>\n      </Nav>\n\n      {flowMangerContent()}\n      <BootstrapTable\n        bootstrap4\n        keyField=\"id\"\n        data={data}\n        columns={selectTag === \"flow\" ? flowColumns : waitAcceptColumns}\n        defaultSorted={defaultSorted}\n        pagination={paginationFactory()}\n      />\n    </div>\n  );\n};\n\nFlowPage.propTypes = {};\n\nFlowPage.defaultProps = {};\n\nexport default FlowPage;\n","export const tagStateSelector = (state) => (state.flow);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {};\n","import * as R from 'ramda';\nimport { createSelector } from 'reselect';\nimport { tagStateSelector } from '../../lib/rootSelector';\n\nexport const reduxStatusSelector = createSelector(\n  tagStateSelector,\n  (result) => R.path(['reduxStatus'], result),\n);\n\nexport const reduxErrorSelector = createSelector(\n  tagStateSelector,\n  (result) => R.path(['error', 'message'], result),\n);\n\nexport const tagListSelector = createSelector(\n  tagStateSelector,\n  (result) => R.path(['data'], result),\n);\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport ActionCreators from \"../../ActionCreator\";\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport FlowPage from \"./FlowPage\";\nimport * as R from \"ramda\";\nimport {\n  reduxStatusSelector,\n  reduxErrorSelector,\n  tagListSelector,\n} from \"../../selector\";\n\nconst FlowPageContainer = ({ reduxStatus, reduxError, actions, data }) => {\n  const { getTagFlowRequest } = actions;\n  const flowData = R.pathOr([] , ['tags' , 'data'] , data)\n\n  useEffect(() => {\n    getTagFlowRequest();\n  }, [getTagFlowRequest]);\n\n  return (\n    <FlowPage reduxStatus={reduxStatus} reduxError={reduxError} data={flowData} />\n  );\n};\n\nFlowPageContainer.propTypes = {\n  reduxStatus: PropTypes.string,\n  reduxError: PropTypes.string,\n  actions: PropTypes.shape({}).isRequired,\n};\n\nFlowPageContainer.defaultProps = {\n  reduxStatus: null,\n  reduxError: null,\n};\n\nconst mapStateToProps = (state) => ({\n  reduxStatus: reduxStatusSelector(state),\n  reduxError: reduxErrorSelector(state),\n  data: tagListSelector(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(\n    {\n      ...ActionCreators,\n    },\n    dispatch\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlowPageContainer);\n","import React from \"react\";\nimport \"./App.css\";\nimport Iframe from 'react-iframe'\nimport FlowPageContainer from \"./modules/Flow/component/flowPage\";\n\nfunction App() {\n  return (\n    <div>\n      <FlowPageContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\n\nlet privateToken = null;\n\nconst instance = axios.create({\n  baseURL: 'https://337bf18b-3eae-41fd-8c34-4edae8fde525.mock.pstmn.io',\n  timeout: 600000,\n});\n\ninstance.setToken = (newToken) => {\n  privateToken = newToken;\n};\n\ninstance.interceptors.request.use((config = {}) => {\n  if (privateToken) {\n    const {\n      headers = {},\n    } = config;\n    headers.Authorization = privateToken;\n  }\n  return config;\n});\n\n// NOTE: Notify authenticationErrorHandler when we got 401 error.\nlet authenticationErrorHandler;\ninstance.setAuthenticationErrorHandler = (handler) => {\n  authenticationErrorHandler = handler;\n};\n\n/**\n * catch error from server's response\n * if we dont do this, we have to get server message from\n * error.response.data.error.message every time\n */\ninstance.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (authenticationErrorHandler && error && error.response && error.response.status === 401) {\n      authenticationErrorHandler();\n    }\n    return Promise.reject(error.response.data.error);\n  },\n);\n\nexport default instance;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const STATUS_INITIAL = 'STATUS_INITIAL';\nconst STATUS_LOADING = 'STATUS_LOADING';\nconst STATUS_NORMAL = 'STATUS_NORMAL';\nconst STATUS_ERROR = 'STATUS_ERROR';\n\nexport const severeLevel = {\n  [STATUS_INITIAL]: 0,\n  [STATUS_NORMAL]: 1,\n  [STATUS_LOADING]: 2,\n  [STATUS_ERROR]: 3,\n};\n\nconst reduxStatus =  {\n  STATUS_INITIAL,\n  STATUS_LOADING,\n  STATUS_NORMAL,\n  STATUS_ERROR,\n}\n\nexport default reduxStatus;","import { handleActions, combineActions } from 'redux-actions';\nimport update from 'immutability-helper';\nimport ReduxStatus from '../../constants/ReduxStatus';\nimport ActionCreator from './ActionCreator';\n\nconst {\n  getTagFlowRequest,\n  getTagFlowSuccess,\n  getTagFlowFailure,\n} = ActionCreator;\n\nconst initialState = {\n  reduxStatus: ReduxStatus.STATUS_INITIAL,\n  error: null,\n  data: null,\n};\n\nexport default handleActions({\n\n  [combineActions(\n    getTagFlowRequest,\n  )]: (state) => update(state, {\n    reduxStatus: { $set: ReduxStatus.STATUS_LOADING },\n    error: { $set: null },\n  }),\n\n  [combineActions(\n    getTagFlowFailure,\n  )]: (state, { payload }) => update(state, {\n    reduxStatus: { $set: ReduxStatus.STATUS_ERROR },\n    error: { $set: payload },\n  }),\n\n  [getTagFlowSuccess]: (state, { payload }) => update(state, {\n    reduxStatus: { $set: ReduxStatus.STATUS_NORMAL },\n    data: { $set: payload },\n    error: { $set: null },\n  }),\n\n}, initialState);\n","import { combineReducers } from 'redux';\nimport flow from '../modules/Flow/reducer';\n\nconst appReducer = combineReducers({\n  flow,\n});\n\n// NOTE: reset reducers after sign out.\nconst rootReducer = (state, action) => (appReducer(state, action));\n\nexport default rootReducer;\n","import api from '../../lib/configAxios';\n\nconst apiList = {\n  getFlowList: async () => api.get('api/getFlowData'),\n}\n\nexport default apiList\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport ActionCreator from './ActionCreator';\nimport API from './API';\n\nconst {\n  getTagRequest,\n  getTagSuccess,\n  getTagFailure,\n\n  getTagFlowRequest,\n  getTagFlowSuccess,\n  getTagFlowFailure,\n} = ActionCreator;\n\n// ---------- TASKS ----------\nexport function* getTag(data) {\n  yield put(getTagRequest(data));\n  try {\n    const result = yield call(API.getFlowList);\n    yield put(getTagSuccess(result.data));\n    return result;\n  } catch (error) {\n    yield put(getTagFailure(error));\n    throw error;\n  }\n}\n\n// ---------- FLOWS ----------\nexport function* getTagFlow({ payload }) {\n  console.log('getSaga');\n  try {\n    const tags = yield call(getTag, payload);\n\n    yield put(\n      getTagFlowSuccess({\n        tags,\n      }),\n    );\n  } catch (error) {\n    yield put(getTagFlowFailure(error));\n  }\n}\n\nconst tagsSaga = [takeLatest(getTagFlowRequest, getTagFlow)]\n\nexport default tagsSaga;\n","import { all } from 'redux-saga/effects';\nimport tagSaga from '../modules/Flow/saga';\n\nexport default function* rootSaga() {\n  yield all([\n    ...tagSaga,\n  ]);\n}\n","import {\n  applyMiddleware,\n  compose,\n  createStore,\n} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducers from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n/* eslint-disable no-underscore-dangle */\nconst composedReduxDevTool = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    serialize: true,\n  }) : null;\n/* eslint-enable no-underscore-dangle */\nconst composeEnhancers = composedReduxDevTool || compose;\n\nconst middlewares = [\n  sagaMiddleware,\n];\n\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    rootReducers,\n    preloadedState,\n    enhancer,\n  );\n\n  // Enable Webpack hot module replacement for reducers\n  if (module.hot) {\n    module.hot.accept(() => {\n      // eslint-disable-next-line global-require\n      const nextReducer = require('./rootReducer').default;\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport configStore from \"./lib/configStore\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nexport const store = configStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}